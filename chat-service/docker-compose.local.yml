# 버전지정
version: "3.3" 

# 컨테이너 설정

networks: 
  spring-network:
    external: true

services: 
  chat-service:
    build: .
    image: chat
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://chat-database:5432/chat-db?useUnicode=true&serverTimezone=Asia/Seoul
      SPRING_DATASOURCE_USERNAME: user
      SPRING_DATASOURCE_PASSWORD: 1234
      SPRING_DATASOURCE_DATABASE_PLATFORM: org.hibernate.dialect.PostgreSQL95Dialect
      SPRING_SESSION_STORAGE_TYPE: redis
      SPRING_REDIS_HOST: chat-redis
      SPRING_REDIS_PORT: 6379

    depends_on:
      - chat-database
      - chat-redis
    restart: always
    networks:
      - spring-network
    entrypoint: ["bash", "-c"]
    command:
      - |
        sleep 20s
        java -jar chat.jar   

  chat-database:
    image: postgres:latest
    
    environment:
      POSTGRES_DB: chat-db
      POSTGRES_USER: user
      POSTGRES_PASSWORD: 1234
    networks:
      - spring-network
    volumes:
      - chat-db-postgresql:/var/lib/postgresql/data
  
  chat-redis:
    image: redis:6.2.6
    networks:
      - spring-network
    command: [ "redis-server", "--protected-mode", "no" ]
    volumes:
      - chat-db-redis:/data

# docker volume 사용
volumes:
  chat-db-postgresql:
    external: true
  chat-db-redis:
    external: true